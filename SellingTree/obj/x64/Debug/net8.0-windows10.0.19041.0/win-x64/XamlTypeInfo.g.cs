//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Diagnostics.CodeAnalysis;


namespace SellingTree
{
    public partial class App : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2409")]
        private global::SellingTree.SellingTree_XamlTypeInfo.XamlMetaDataProvider __appProvider;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2409")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::SellingTree.SellingTree_XamlTypeInfo.XamlMetaDataProvider _AppProvider
        {
            get
            {
                if (__appProvider == null)
                {
                    __appProvider = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMetaDataProvider();
                }
                return __appProvider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2409")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return _AppProvider.GetXamlType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2409")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return _AppProvider.GetXamlType(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2409")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return _AppProvider.GetXmlnsDefinitions();
        }
    }
}

namespace SellingTree.SellingTree_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2409")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class XamlMetaDataProvider : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::SellingTree.SellingTree_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::SellingTree.SellingTree_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::SellingTree.SellingTree_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::Windows.Foundation.Metadata.DefaultOverload]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2409")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType) 
            { 
                if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByType(type);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType)
            {
                if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByName(typeName);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlMember xamlMember;
            lock (_xamlMembers)
            {
                if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
                {
                    return xamlMember;
                }
                xamlMember = CreateXamlMember(longMemberName);
                if (xamlMember != null)
                {
                    _xamlMembers.Add(longMemberName, xamlMember);
                }
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;
        
        private void InitTypeTables()
        {
            _typeNameTable = new string[73];
            _typeNameTable[0] = "Microsoft.UI.Xaml.Controls.XamlControlsResources";
            _typeNameTable[1] = "Microsoft.UI.Xaml.ResourceDictionary";
            _typeNameTable[2] = "Object";
            _typeNameTable[3] = "Boolean";
            _typeNameTable[4] = "Microsoft.UI.Xaml.Controls.ScrollView";
            _typeNameTable[5] = "Microsoft.UI.Xaml.Controls.Control";
            _typeNameTable[6] = "Microsoft.UI.Xaml.UIElement";
            _typeNameTable[7] = "Microsoft.UI.Xaml.Controls.ScrollingContentOrientation";
            _typeNameTable[8] = "System.Enum";
            _typeNameTable[9] = "System.ValueType";
            _typeNameTable[10] = "Microsoft.UI.Xaml.Visibility";
            _typeNameTable[11] = "Microsoft.UI.Xaml.Controls.ScrollingScrollMode";
            _typeNameTable[12] = "Microsoft.UI.Composition.CompositionPropertySet";
            _typeNameTable[13] = "Microsoft.UI.Composition.CompositionObject";
            _typeNameTable[14] = "Double";
            _typeNameTable[15] = "Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility";
            _typeNameTable[16] = "Microsoft.UI.Xaml.Controls.ScrollingChainMode";
            _typeNameTable[17] = "Microsoft.UI.Xaml.Controls.ScrollingRailMode";
            _typeNameTable[18] = "Microsoft.UI.Xaml.Controls.ScrollingInputKinds";
            _typeNameTable[19] = "Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter";
            _typeNameTable[20] = "Microsoft.UI.Xaml.FrameworkElement";
            _typeNameTable[21] = "Microsoft.UI.Xaml.Controls.ScrollingInteractionState";
            _typeNameTable[22] = "Single";
            _typeNameTable[23] = "Microsoft.UI.Xaml.Controls.ScrollingZoomMode";
            _typeNameTable[24] = "SellingTree.MainWindow";
            _typeNameTable[25] = "Microsoft.UI.Xaml.Window";
            _typeNameTable[26] = "SellingTree.View.AccountPage";
            _typeNameTable[27] = "Microsoft.UI.Xaml.Controls.Page";
            _typeNameTable[28] = "Microsoft.UI.Xaml.Controls.UserControl";
            _typeNameTable[29] = "SellingTree.BlogPage";
            _typeNameTable[30] = "SellingTree.ViewModel.BlogViewModel";
            _typeNameTable[31] = "SellingTree.BlogPostPage";
            _typeNameTable[32] = "SellingTree.View.HorizontalAlignmentConverter";
            _typeNameTable[33] = "SellingTree.View.MarginConverter";
            _typeNameTable[34] = "SellingTree.View.MessageBackgroundConverter";
            _typeNameTable[35] = "SellingTree.View.ChatPage";
            _typeNameTable[36] = "SellingTree.ViewModel.MessageViewModel";
            _typeNameTable[37] = "SellingTree.CollectionPage";
            _typeNameTable[38] = "Microsoft.UI.Xaml.Controls.ProgressRing";
            _typeNameTable[39] = "Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings";
            _typeNameTable[40] = "Microsoft.UI.Xaml.DependencyObject";
            _typeNameTable[41] = "SellingTree.View.DictionaryPage";
            _typeNameTable[42] = "SellingTree.GroupCollectionDetails";
            _typeNameTable[43] = "SellingTree.View.LoginPage";
            _typeNameTable[44] = "SellingTree.IntToVNDIConverter";
            _typeNameTable[45] = "SellingTree.QuantityToStringIConverter";
            _typeNameTable[46] = "SellingTree.TextToPopupTextConverter";
            _typeNameTable[47] = "SellingTree.MainView";
            _typeNameTable[48] = "SellingTree.IntToVisibilityIConverter";
            _typeNameTable[49] = "Microsoft.UI.Xaml.Controls.InfoBadge";
            _typeNameTable[50] = "Int32";
            _typeNameTable[51] = "Microsoft.UI.Xaml.Controls.IconSource";
            _typeNameTable[52] = "Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings";
            _typeNameTable[53] = "SellingTree.NavigationBarView";
            _typeNameTable[54] = "Microsoft.UI.Xaml.Controls.RatingControl";
            _typeNameTable[55] = "String";
            _typeNameTable[56] = "Microsoft.UI.Xaml.Controls.RatingItemInfo";
            _typeNameTable[57] = "Microsoft.UI.Xaml.Controls.PersonPicture";
            _typeNameTable[58] = "Microsoft.UI.Xaml.Media.ImageSource";
            _typeNameTable[59] = "Windows.ApplicationModel.Contacts.Contact";
            _typeNameTable[60] = "Microsoft.UI.Xaml.Controls.PersonPictureTemplateSettings";
            _typeNameTable[61] = "Microsoft.UI.Xaml.Controls.NumberBox";
            _typeNameTable[62] = "Microsoft.UI.Xaml.Controls.NumberBoxSpinButtonPlacementMode";
            _typeNameTable[63] = "Microsoft.UI.Xaml.DataTemplate";
            _typeNameTable[64] = "Windows.Globalization.NumberFormatting.INumberFormatter2";
            _typeNameTable[65] = "Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase";
            _typeNameTable[66] = "Microsoft.UI.Xaml.Media.SolidColorBrush";
            _typeNameTable[67] = "Microsoft.UI.Xaml.TextReadingOrder";
            _typeNameTable[68] = "Microsoft.UI.Xaml.Controls.NumberBoxValidationMode";
            _typeNameTable[69] = "SellingTree.ProductView";
            _typeNameTable[70] = "SellingTree.ShopCartView";
            _typeNameTable[71] = "Microsoft.UI.Xaml.Controls.TreeViewNode";
            _typeNameTable[72] = "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>";

            _typeTable = new global::System.Type[73];
            _typeTable[0] = typeof(global::Microsoft.UI.Xaml.Controls.XamlControlsResources);
            _typeTable[1] = typeof(global::Microsoft.UI.Xaml.ResourceDictionary);
            _typeTable[2] = typeof(global::System.Object);
            _typeTable[3] = typeof(global::System.Boolean);
            _typeTable[4] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollView);
            _typeTable[5] = typeof(global::Microsoft.UI.Xaml.Controls.Control);
            _typeTable[6] = typeof(global::Microsoft.UI.Xaml.UIElement);
            _typeTable[7] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation);
            _typeTable[8] = typeof(global::System.Enum);
            _typeTable[9] = typeof(global::System.ValueType);
            _typeTable[10] = typeof(global::Microsoft.UI.Xaml.Visibility);
            _typeTable[11] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode);
            _typeTable[12] = typeof(global::Microsoft.UI.Composition.CompositionPropertySet);
            _typeTable[13] = typeof(global::Microsoft.UI.Composition.CompositionObject);
            _typeTable[14] = typeof(global::System.Double);
            _typeTable[15] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility);
            _typeTable[16] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingChainMode);
            _typeTable[17] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingRailMode);
            _typeTable[18] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds);
            _typeTable[19] = typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter);
            _typeTable[20] = typeof(global::Microsoft.UI.Xaml.FrameworkElement);
            _typeTable[21] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState);
            _typeTable[22] = typeof(global::System.Single);
            _typeTable[23] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingZoomMode);
            _typeTable[24] = typeof(global::SellingTree.MainWindow);
            _typeTable[25] = typeof(global::Microsoft.UI.Xaml.Window);
            _typeTable[26] = typeof(global::SellingTree.View.AccountPage);
            _typeTable[27] = typeof(global::Microsoft.UI.Xaml.Controls.Page);
            _typeTable[28] = typeof(global::Microsoft.UI.Xaml.Controls.UserControl);
            _typeTable[29] = typeof(global::SellingTree.BlogPage);
            _typeTable[30] = typeof(global::SellingTree.ViewModel.BlogViewModel);
            _typeTable[31] = typeof(global::SellingTree.BlogPostPage);
            _typeTable[32] = typeof(global::SellingTree.View.HorizontalAlignmentConverter);
            _typeTable[33] = typeof(global::SellingTree.View.MarginConverter);
            _typeTable[34] = typeof(global::SellingTree.View.MessageBackgroundConverter);
            _typeTable[35] = typeof(global::SellingTree.View.ChatPage);
            _typeTable[36] = typeof(global::SellingTree.ViewModel.MessageViewModel);
            _typeTable[37] = typeof(global::SellingTree.CollectionPage);
            _typeTable[38] = typeof(global::Microsoft.UI.Xaml.Controls.ProgressRing);
            _typeTable[39] = typeof(global::Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings);
            _typeTable[40] = typeof(global::Microsoft.UI.Xaml.DependencyObject);
            _typeTable[41] = typeof(global::SellingTree.View.DictionaryPage);
            _typeTable[42] = typeof(global::SellingTree.GroupCollectionDetails);
            _typeTable[43] = typeof(global::SellingTree.View.LoginPage);
            _typeTable[44] = typeof(global::SellingTree.IntToVNDIConverter);
            _typeTable[45] = typeof(global::SellingTree.QuantityToStringIConverter);
            _typeTable[46] = typeof(global::SellingTree.TextToPopupTextConverter);
            _typeTable[47] = typeof(global::SellingTree.MainView);
            _typeTable[48] = typeof(global::SellingTree.IntToVisibilityIConverter);
            _typeTable[49] = typeof(global::Microsoft.UI.Xaml.Controls.InfoBadge);
            _typeTable[50] = typeof(global::System.Int32);
            _typeTable[51] = typeof(global::Microsoft.UI.Xaml.Controls.IconSource);
            _typeTable[52] = typeof(global::Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings);
            _typeTable[53] = typeof(global::SellingTree.NavigationBarView);
            _typeTable[54] = typeof(global::Microsoft.UI.Xaml.Controls.RatingControl);
            _typeTable[55] = typeof(global::System.String);
            _typeTable[56] = typeof(global::Microsoft.UI.Xaml.Controls.RatingItemInfo);
            _typeTable[57] = typeof(global::Microsoft.UI.Xaml.Controls.PersonPicture);
            _typeTable[58] = typeof(global::Microsoft.UI.Xaml.Media.ImageSource);
            _typeTable[59] = typeof(global::Windows.ApplicationModel.Contacts.Contact);
            _typeTable[60] = typeof(global::Microsoft.UI.Xaml.Controls.PersonPictureTemplateSettings);
            _typeTable[61] = typeof(global::Microsoft.UI.Xaml.Controls.NumberBox);
            _typeTable[62] = typeof(global::Microsoft.UI.Xaml.Controls.NumberBoxSpinButtonPlacementMode);
            _typeTable[63] = typeof(global::Microsoft.UI.Xaml.DataTemplate);
            _typeTable[64] = typeof(global::Windows.Globalization.NumberFormatting.INumberFormatter2);
            _typeTable[65] = typeof(global::Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase);
            _typeTable[66] = typeof(global::Microsoft.UI.Xaml.Media.SolidColorBrush);
            _typeTable[67] = typeof(global::Microsoft.UI.Xaml.TextReadingOrder);
            _typeTable[68] = typeof(global::Microsoft.UI.Xaml.Controls.NumberBoxValidationMode);
            _typeTable[69] = typeof(global::SellingTree.ProductView);
            _typeTable[70] = typeof(global::SellingTree.ShopCartView);
            _typeTable[71] = typeof(global::Microsoft.UI.Xaml.Controls.TreeViewNode);
            _typeTable[72] = typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode>);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_XamlControlsResources() { return new global::Microsoft.UI.Xaml.Controls.XamlControlsResources(); }
        private object Activate_4_ScrollView() { return new global::Microsoft.UI.Xaml.Controls.ScrollView(); }
        private object Activate_19_ScrollPresenter() { return new global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter(); }
        private object Activate_24_MainWindow() { return new global::SellingTree.MainWindow(); }
        private object Activate_26_AccountPage() { return new global::SellingTree.View.AccountPage(); }
        private object Activate_29_BlogPage() { return new global::SellingTree.BlogPage(); }
        private object Activate_30_BlogViewModel() { return new global::SellingTree.ViewModel.BlogViewModel(); }
        private object Activate_31_BlogPostPage() { return new global::SellingTree.BlogPostPage(); }
        private object Activate_32_HorizontalAlignmentConverter() { return new global::SellingTree.View.HorizontalAlignmentConverter(); }
        private object Activate_33_MarginConverter() { return new global::SellingTree.View.MarginConverter(); }
        private object Activate_34_MessageBackgroundConverter() { return new global::SellingTree.View.MessageBackgroundConverter(); }
        private object Activate_35_ChatPage() { return new global::SellingTree.View.ChatPage(); }
        private object Activate_36_MessageViewModel() { return new global::SellingTree.ViewModel.MessageViewModel(); }
        private object Activate_37_CollectionPage() { return new global::SellingTree.CollectionPage(); }
        private object Activate_38_ProgressRing() { return new global::Microsoft.UI.Xaml.Controls.ProgressRing(); }
        private object Activate_41_DictionaryPage() { return new global::SellingTree.View.DictionaryPage(); }
        private object Activate_42_GroupCollectionDetails() { return new global::SellingTree.GroupCollectionDetails(); }
        private object Activate_43_LoginPage() { return new global::SellingTree.View.LoginPage(); }
        private object Activate_44_IntToVNDIConverter() { return new global::SellingTree.IntToVNDIConverter(); }
        private object Activate_45_QuantityToStringIConverter() { return new global::SellingTree.QuantityToStringIConverter(); }
        private object Activate_46_TextToPopupTextConverter() { return new global::SellingTree.TextToPopupTextConverter(); }
        private object Activate_47_MainView() { return new global::SellingTree.MainView(); }
        private object Activate_48_IntToVisibilityIConverter() { return new global::SellingTree.IntToVisibilityIConverter(); }
        private object Activate_49_InfoBadge() { return new global::Microsoft.UI.Xaml.Controls.InfoBadge(); }
        private object Activate_52_InfoBadgeTemplateSettings() { return new global::Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings(); }
        private object Activate_53_NavigationBarView() { return new global::SellingTree.NavigationBarView(); }
        private object Activate_54_RatingControl() { return new global::Microsoft.UI.Xaml.Controls.RatingControl(); }
        private object Activate_56_RatingItemInfo() { return new global::Microsoft.UI.Xaml.Controls.RatingItemInfo(); }
        private object Activate_57_PersonPicture() { return new global::Microsoft.UI.Xaml.Controls.PersonPicture(); }
        private object Activate_59_Contact() { return new global::Windows.ApplicationModel.Contacts.Contact(); }
        private object Activate_61_NumberBox() { return new global::Microsoft.UI.Xaml.Controls.NumberBox(); }
        private object Activate_70_ShopCartView() { return new global::SellingTree.ShopCartView(); }
        private object Activate_71_TreeViewNode() { return new global::Microsoft.UI.Xaml.Controls.TreeViewNode(); }
        private void StaticInitializer_0_XamlControlsResources() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.XamlControlsResources).TypeHandle);
        private void StaticInitializer_4_ScrollView() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollView).TypeHandle);
        private void StaticInitializer_7_ScrollingContentOrientation() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation).TypeHandle);
        private void StaticInitializer_8_Enum() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Enum).TypeHandle);
        private void StaticInitializer_9_ValueType() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.ValueType).TypeHandle);
        private void StaticInitializer_11_ScrollingScrollMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode).TypeHandle);
        private void StaticInitializer_12_CompositionPropertySet() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Composition.CompositionPropertySet).TypeHandle);
        private void StaticInitializer_13_CompositionObject() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Composition.CompositionObject).TypeHandle);
        private void StaticInitializer_15_ScrollingScrollBarVisibility() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility).TypeHandle);
        private void StaticInitializer_16_ScrollingChainMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingChainMode).TypeHandle);
        private void StaticInitializer_17_ScrollingRailMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingRailMode).TypeHandle);
        private void StaticInitializer_18_ScrollingInputKinds() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds).TypeHandle);
        private void StaticInitializer_19_ScrollPresenter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter).TypeHandle);
        private void StaticInitializer_21_ScrollingInteractionState() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState).TypeHandle);
        private void StaticInitializer_23_ScrollingZoomMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ScrollingZoomMode).TypeHandle);
        private void StaticInitializer_24_MainWindow() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::SellingTree.MainWindow).TypeHandle);
        private void StaticInitializer_26_AccountPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::SellingTree.View.AccountPage).TypeHandle);
        private void StaticInitializer_29_BlogPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::SellingTree.BlogPage).TypeHandle);
        private void StaticInitializer_30_BlogViewModel() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::SellingTree.ViewModel.BlogViewModel).TypeHandle);
        private void StaticInitializer_31_BlogPostPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::SellingTree.BlogPostPage).TypeHandle);
        private void StaticInitializer_32_HorizontalAlignmentConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::SellingTree.View.HorizontalAlignmentConverter).TypeHandle);
        private void StaticInitializer_33_MarginConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::SellingTree.View.MarginConverter).TypeHandle);
        private void StaticInitializer_34_MessageBackgroundConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::SellingTree.View.MessageBackgroundConverter).TypeHandle);
        private void StaticInitializer_35_ChatPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::SellingTree.View.ChatPage).TypeHandle);
        private void StaticInitializer_36_MessageViewModel() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::SellingTree.ViewModel.MessageViewModel).TypeHandle);
        private void StaticInitializer_37_CollectionPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::SellingTree.CollectionPage).TypeHandle);
        private void StaticInitializer_38_ProgressRing() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ProgressRing).TypeHandle);
        private void StaticInitializer_39_ProgressRingTemplateSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings).TypeHandle);
        private void StaticInitializer_41_DictionaryPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::SellingTree.View.DictionaryPage).TypeHandle);
        private void StaticInitializer_42_GroupCollectionDetails() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::SellingTree.GroupCollectionDetails).TypeHandle);
        private void StaticInitializer_43_LoginPage() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::SellingTree.View.LoginPage).TypeHandle);
        private void StaticInitializer_44_IntToVNDIConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::SellingTree.IntToVNDIConverter).TypeHandle);
        private void StaticInitializer_45_QuantityToStringIConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::SellingTree.QuantityToStringIConverter).TypeHandle);
        private void StaticInitializer_46_TextToPopupTextConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::SellingTree.TextToPopupTextConverter).TypeHandle);
        private void StaticInitializer_47_MainView() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::SellingTree.MainView).TypeHandle);
        private void StaticInitializer_48_IntToVisibilityIConverter() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::SellingTree.IntToVisibilityIConverter).TypeHandle);
        private void StaticInitializer_49_InfoBadge() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.InfoBadge).TypeHandle);
        private void StaticInitializer_52_InfoBadgeTemplateSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings).TypeHandle);
        private void StaticInitializer_53_NavigationBarView() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::SellingTree.NavigationBarView).TypeHandle);
        private void StaticInitializer_54_RatingControl() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.RatingControl).TypeHandle);
        private void StaticInitializer_56_RatingItemInfo() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.RatingItemInfo).TypeHandle);
        private void StaticInitializer_57_PersonPicture() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.PersonPicture).TypeHandle);
        private void StaticInitializer_59_Contact() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Windows.ApplicationModel.Contacts.Contact).TypeHandle);
        private void StaticInitializer_60_PersonPictureTemplateSettings() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.PersonPictureTemplateSettings).TypeHandle);
        private void StaticInitializer_61_NumberBox() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NumberBox).TypeHandle);
        private void StaticInitializer_62_NumberBoxSpinButtonPlacementMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NumberBoxSpinButtonPlacementMode).TypeHandle);
        private void StaticInitializer_64_INumberFormatter2() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Windows.Globalization.NumberFormatting.INumberFormatter2).TypeHandle);
        private void StaticInitializer_68_NumberBoxValidationMode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.NumberBoxValidationMode).TypeHandle);
        private void StaticInitializer_69_ProductView() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::SellingTree.ProductView).TypeHandle);
        private void StaticInitializer_70_ShopCartView() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::SellingTree.ShopCartView).TypeHandle);
        private void StaticInitializer_71_TreeViewNode() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::Microsoft.UI.Xaml.Controls.TreeViewNode).TypeHandle);
        private void StaticInitializer_72_IList() => global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode>).TypeHandle);
        private void MapAdd_0_XamlControlsResources(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.Object, global::System.Object>)instance;
            var newKey = (global::System.Object)key;
            var newItem = (global::System.Object)item;
            collection.Add(newKey, newItem);
        }
        private void VectorAdd_72_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Controls.TreeViewNode>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)item;
            collection.Add(newItem);
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::SellingTree.SellingTree_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Microsoft.UI.Xaml.Controls.XamlControlsResources
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.ResourceDictionary"));
                userType.Activator = Activate_0_XamlControlsResources;
                userType.StaticInitializer = StaticInitializer_0_XamlControlsResources;
                userType.DictionaryAdd = MapAdd_0_XamlControlsResources;
                userType.AddMemberName("UseCompactResources");
                xamlType = userType;
                break;

            case 1:   //  Microsoft.UI.Xaml.ResourceDictionary
                xamlType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Object
                xamlType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Boolean
                xamlType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 4:   //  Microsoft.UI.Xaml.Controls.ScrollView
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_4_ScrollView;
                userType.StaticInitializer = StaticInitializer_4_ScrollView;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.ScrollView.Content");
                userType.AddMemberName("Content");
                userType.AddMemberName("ContentOrientation");
                userType.AddMemberName("ComputedHorizontalScrollBarVisibility");
                userType.AddMemberName("ComputedHorizontalScrollMode");
                userType.AddMemberName("ComputedVerticalScrollBarVisibility");
                userType.AddMemberName("ComputedVerticalScrollMode");
                userType.AddMemberName("CurrentAnchor");
                userType.AddMemberName("ExpressionAnimationSources");
                userType.AddMemberName("ExtentHeight");
                userType.AddMemberName("ExtentWidth");
                userType.AddMemberName("HorizontalAnchorRatio");
                userType.AddMemberName("HorizontalOffset");
                userType.AddMemberName("HorizontalScrollBarVisibility");
                userType.AddMemberName("HorizontalScrollChainMode");
                userType.AddMemberName("HorizontalScrollMode");
                userType.AddMemberName("HorizontalScrollRailMode");
                userType.AddMemberName("IgnoredInputKinds");
                userType.AddMemberName("MaxZoomFactor");
                userType.AddMemberName("MinZoomFactor");
                userType.AddMemberName("ScrollPresenter");
                userType.AddMemberName("ScrollableHeight");
                userType.AddMemberName("ScrollableWidth");
                userType.AddMemberName("State");
                userType.AddMemberName("VerticalAnchorRatio");
                userType.AddMemberName("VerticalOffset");
                userType.AddMemberName("VerticalScrollBarVisibility");
                userType.AddMemberName("VerticalScrollChainMode");
                userType.AddMemberName("VerticalScrollMode");
                userType.AddMemberName("VerticalScrollRailMode");
                userType.AddMemberName("ViewportHeight");
                userType.AddMemberName("ViewportWidth");
                userType.AddMemberName("ZoomChainMode");
                userType.AddMemberName("ZoomFactor");
                userType.AddMemberName("ZoomMode");
                xamlType = userType;
                break;

            case 5:   //  Microsoft.UI.Xaml.Controls.Control
                xamlType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  Microsoft.UI.Xaml.UIElement
                xamlType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  Microsoft.UI.Xaml.Controls.ScrollingContentOrientation
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_7_ScrollingContentOrientation;
                userType.AddEnumValue("Vertical", global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation.Vertical);
                userType.AddEnumValue("Horizontal", global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation.Horizontal);
                userType.AddEnumValue("None", global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation.None);
                userType.AddEnumValue("Both", global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation.Both);
                xamlType = userType;
                break;

            case 8:   //  System.Enum
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.StaticInitializer = StaticInitializer_8_Enum;
                xamlType = userType;
                break;

            case 9:   //  System.ValueType
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_9_ValueType;
                xamlType = userType;
                break;

            case 10:   //  Microsoft.UI.Xaml.Visibility
                xamlType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 11:   //  Microsoft.UI.Xaml.Controls.ScrollingScrollMode
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_11_ScrollingScrollMode;
                userType.AddEnumValue("Enabled", global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode.Enabled);
                userType.AddEnumValue("Disabled", global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode.Disabled);
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode.Auto);
                xamlType = userType;
                break;

            case 12:   //  Microsoft.UI.Composition.CompositionPropertySet
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Composition.CompositionObject"));
                userType.StaticInitializer = StaticInitializer_12_CompositionPropertySet;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 13:   //  Microsoft.UI.Composition.CompositionObject
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_13_CompositionObject;
                xamlType = userType;
                break;

            case 14:   //  Double
                xamlType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 15:   //  Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_15_ScrollingScrollBarVisibility;
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility.Auto);
                userType.AddEnumValue("Visible", global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility.Visible);
                userType.AddEnumValue("Hidden", global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility.Hidden);
                xamlType = userType;
                break;

            case 16:   //  Microsoft.UI.Xaml.Controls.ScrollingChainMode
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_16_ScrollingChainMode;
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.ScrollingChainMode.Auto);
                userType.AddEnumValue("Always", global::Microsoft.UI.Xaml.Controls.ScrollingChainMode.Always);
                userType.AddEnumValue("Never", global::Microsoft.UI.Xaml.Controls.ScrollingChainMode.Never);
                xamlType = userType;
                break;

            case 17:   //  Microsoft.UI.Xaml.Controls.ScrollingRailMode
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_17_ScrollingRailMode;
                userType.AddEnumValue("Enabled", global::Microsoft.UI.Xaml.Controls.ScrollingRailMode.Enabled);
                userType.AddEnumValue("Disabled", global::Microsoft.UI.Xaml.Controls.ScrollingRailMode.Disabled);
                xamlType = userType;
                break;

            case 18:   //  Microsoft.UI.Xaml.Controls.ScrollingInputKinds
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_18_ScrollingInputKinds;
                userType.AddEnumValue("None", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.None);
                userType.AddEnumValue("Touch", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.Touch);
                userType.AddEnumValue("Pen", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.Pen);
                userType.AddEnumValue("MouseWheel", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.MouseWheel);
                userType.AddEnumValue("Keyboard", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.Keyboard);
                userType.AddEnumValue("Gamepad", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.Gamepad);
                userType.AddEnumValue("All", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.All);
                xamlType = userType;
                break;

            case 19:   //  Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement"));
                userType.StaticInitializer = StaticInitializer_19_ScrollPresenter;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter.Content");
                userType.AddMemberName("Content");
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 20:   //  Microsoft.UI.Xaml.FrameworkElement
                xamlType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 21:   //  Microsoft.UI.Xaml.Controls.ScrollingInteractionState
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_21_ScrollingInteractionState;
                userType.AddEnumValue("Idle", global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState.Idle);
                userType.AddEnumValue("Interaction", global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState.Interaction);
                userType.AddEnumValue("Inertia", global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState.Inertia);
                userType.AddEnumValue("Animation", global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState.Animation);
                xamlType = userType;
                break;

            case 22:   //  Single
                xamlType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 23:   //  Microsoft.UI.Xaml.Controls.ScrollingZoomMode
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_23_ScrollingZoomMode;
                userType.AddEnumValue("Enabled", global::Microsoft.UI.Xaml.Controls.ScrollingZoomMode.Enabled);
                userType.AddEnumValue("Disabled", global::Microsoft.UI.Xaml.Controls.ScrollingZoomMode.Disabled);
                xamlType = userType;
                break;

            case 24:   //  SellingTree.MainWindow
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Window"));
                userType.Activator = Activate_24_MainWindow;
                userType.StaticInitializer = StaticInitializer_24_MainWindow;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 25:   //  Microsoft.UI.Xaml.Window
                xamlType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 26:   //  SellingTree.View.AccountPage
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_26_AccountPage;
                userType.StaticInitializer = StaticInitializer_26_AccountPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 27:   //  Microsoft.UI.Xaml.Controls.Page
                xamlType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 28:   //  Microsoft.UI.Xaml.Controls.UserControl
                xamlType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 29:   //  SellingTree.BlogPage
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_29_BlogPage;
                userType.StaticInitializer = StaticInitializer_29_BlogPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 30:   //  SellingTree.ViewModel.BlogViewModel
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_30_BlogViewModel;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 31:   //  SellingTree.BlogPostPage
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_31_BlogPostPage;
                userType.StaticInitializer = StaticInitializer_31_BlogPostPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 32:   //  SellingTree.View.HorizontalAlignmentConverter
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_32_HorizontalAlignmentConverter;
                userType.StaticInitializer = StaticInitializer_32_HorizontalAlignmentConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 33:   //  SellingTree.View.MarginConverter
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_33_MarginConverter;
                userType.StaticInitializer = StaticInitializer_33_MarginConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 34:   //  SellingTree.View.MessageBackgroundConverter
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_34_MessageBackgroundConverter;
                userType.StaticInitializer = StaticInitializer_34_MessageBackgroundConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 35:   //  SellingTree.View.ChatPage
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_35_ChatPage;
                userType.StaticInitializer = StaticInitializer_35_ChatPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 36:   //  SellingTree.ViewModel.MessageViewModel
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_36_MessageViewModel;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 37:   //  SellingTree.CollectionPage
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_37_CollectionPage;
                userType.StaticInitializer = StaticInitializer_37_CollectionPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 38:   //  Microsoft.UI.Xaml.Controls.ProgressRing
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_38_ProgressRing;
                userType.StaticInitializer = StaticInitializer_38_ProgressRing;
                userType.AddMemberName("IsActive");
                userType.AddMemberName("IsIndeterminate");
                userType.AddMemberName("Maximum");
                userType.AddMemberName("Minimum");
                userType.AddMemberName("TemplateSettings");
                userType.AddMemberName("Value");
                xamlType = userType;
                break;

            case 39:   //  Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_39_ProgressRingTemplateSettings;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 40:   //  Microsoft.UI.Xaml.DependencyObject
                xamlType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 41:   //  SellingTree.View.DictionaryPage
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_41_DictionaryPage;
                userType.StaticInitializer = StaticInitializer_41_DictionaryPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 42:   //  SellingTree.GroupCollectionDetails
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_42_GroupCollectionDetails;
                userType.StaticInitializer = StaticInitializer_42_GroupCollectionDetails;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 43:   //  SellingTree.View.LoginPage
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_43_LoginPage;
                userType.StaticInitializer = StaticInitializer_43_LoginPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 44:   //  SellingTree.IntToVNDIConverter
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_44_IntToVNDIConverter;
                userType.StaticInitializer = StaticInitializer_44_IntToVNDIConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 45:   //  SellingTree.QuantityToStringIConverter
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_45_QuantityToStringIConverter;
                userType.StaticInitializer = StaticInitializer_45_QuantityToStringIConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 46:   //  SellingTree.TextToPopupTextConverter
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_46_TextToPopupTextConverter;
                userType.StaticInitializer = StaticInitializer_46_TextToPopupTextConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 47:   //  SellingTree.MainView
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_47_MainView;
                userType.StaticInitializer = StaticInitializer_47_MainView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 48:   //  SellingTree.IntToVisibilityIConverter
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_48_IntToVisibilityIConverter;
                userType.StaticInitializer = StaticInitializer_48_IntToVisibilityIConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 49:   //  Microsoft.UI.Xaml.Controls.InfoBadge
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_49_InfoBadge;
                userType.StaticInitializer = StaticInitializer_49_InfoBadge;
                userType.AddMemberName("Value");
                userType.AddMemberName("IconSource");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 50:   //  Int32
                xamlType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 51:   //  Microsoft.UI.Xaml.Controls.IconSource
                xamlType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 52:   //  Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_52_InfoBadgeTemplateSettings;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 53:   //  SellingTree.NavigationBarView
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_53_NavigationBarView;
                userType.StaticInitializer = StaticInitializer_53_NavigationBarView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 54:   //  Microsoft.UI.Xaml.Controls.RatingControl
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_54_RatingControl;
                userType.StaticInitializer = StaticInitializer_54_RatingControl;
                userType.AddMemberName("Value");
                userType.AddMemberName("MaxRating");
                userType.AddMemberName("IsReadOnly");
                userType.AddMemberName("Caption");
                userType.AddMemberName("InitialSetValue");
                userType.AddMemberName("IsClearEnabled");
                userType.AddMemberName("ItemInfo");
                userType.AddMemberName("PlaceholderValue");
                xamlType = userType;
                break;

            case 55:   //  String
                xamlType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 56:   //  Microsoft.UI.Xaml.Controls.RatingItemInfo
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_56_RatingItemInfo;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 57:   //  Microsoft.UI.Xaml.Controls.PersonPicture
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_57_PersonPicture;
                userType.StaticInitializer = StaticInitializer_57_PersonPicture;
                userType.AddMemberName("ProfilePicture");
                userType.AddMemberName("BadgeGlyph");
                userType.AddMemberName("BadgeImageSource");
                userType.AddMemberName("BadgeNumber");
                userType.AddMemberName("BadgeText");
                userType.AddMemberName("Contact");
                userType.AddMemberName("DisplayName");
                userType.AddMemberName("Initials");
                userType.AddMemberName("IsGroup");
                userType.AddMemberName("PreferSmallImage");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 58:   //  Microsoft.UI.Xaml.Media.ImageSource
                xamlType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 59:   //  Windows.ApplicationModel.Contacts.Contact
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.StaticInitializer = StaticInitializer_59_Contact;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 60:   //  Microsoft.UI.Xaml.Controls.PersonPictureTemplateSettings
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.StaticInitializer = StaticInitializer_60_PersonPictureTemplateSettings;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 61:   //  Microsoft.UI.Xaml.Controls.NumberBox
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_61_NumberBox;
                userType.StaticInitializer = StaticInitializer_61_NumberBox;
                userType.AddMemberName("SpinButtonPlacementMode");
                userType.AddMemberName("Value");
                userType.AddMemberName("Minimum");
                userType.AddMemberName("Maximum");
                userType.AddMemberName("AcceptsExpression");
                userType.AddMemberName("Description");
                userType.AddMemberName("Header");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("IsWrapEnabled");
                userType.AddMemberName("LargeChange");
                userType.AddMemberName("NumberFormatter");
                userType.AddMemberName("PlaceholderText");
                userType.AddMemberName("PreventKeyboardDisplayOnProgrammaticFocus");
                userType.AddMemberName("SelectionFlyout");
                userType.AddMemberName("SelectionHighlightColor");
                userType.AddMemberName("SmallChange");
                userType.AddMemberName("Text");
                userType.AddMemberName("TextReadingOrder");
                userType.AddMemberName("ValidationMode");
                xamlType = userType;
                break;

            case 62:   //  Microsoft.UI.Xaml.Controls.NumberBoxSpinButtonPlacementMode
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_62_NumberBoxSpinButtonPlacementMode;
                userType.AddEnumValue("Hidden", global::Microsoft.UI.Xaml.Controls.NumberBoxSpinButtonPlacementMode.Hidden);
                userType.AddEnumValue("Compact", global::Microsoft.UI.Xaml.Controls.NumberBoxSpinButtonPlacementMode.Compact);
                userType.AddEnumValue("Inline", global::Microsoft.UI.Xaml.Controls.NumberBoxSpinButtonPlacementMode.Inline);
                xamlType = userType;
                break;

            case 63:   //  Microsoft.UI.Xaml.DataTemplate
                xamlType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 64:   //  Windows.Globalization.NumberFormatting.INumberFormatter2
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_64_INumberFormatter2;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 65:   //  Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase
                xamlType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 66:   //  Microsoft.UI.Xaml.Media.SolidColorBrush
                xamlType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 67:   //  Microsoft.UI.Xaml.TextReadingOrder
                xamlType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 68:   //  Microsoft.UI.Xaml.Controls.NumberBoxValidationMode
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.StaticInitializer = StaticInitializer_68_NumberBoxValidationMode;
                userType.AddEnumValue("InvalidInputOverwritten", global::Microsoft.UI.Xaml.Controls.NumberBoxValidationMode.InvalidInputOverwritten);
                userType.AddEnumValue("Disabled", global::Microsoft.UI.Xaml.Controls.NumberBoxValidationMode.Disabled);
                xamlType = userType;
                break;

            case 69:   //  SellingTree.ProductView
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.StaticInitializer = StaticInitializer_69_ProductView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 70:   //  SellingTree.ShopCartView
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_70_ShopCartView;
                userType.StaticInitializer = StaticInitializer_70_ShopCartView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 71:   //  Microsoft.UI.Xaml.Controls.TreeViewNode
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_71_TreeViewNode;
                userType.StaticInitializer = StaticInitializer_71_TreeViewNode;
                userType.AddMemberName("Children");
                userType.AddMemberName("Content");
                userType.AddMemberName("Depth");
                userType.AddMemberName("HasChildren");
                userType.AddMemberName("HasUnrealizedChildren");
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("Parent");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 72:   //  System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>
                userType = new global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.StaticInitializer = StaticInitializer_72_IList;
                userType.CollectionAdd = VectorAdd_72_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_XamlControlsResources_UseCompactResources(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.XamlControlsResources)instance;
            return that.UseCompactResources;
        }
        private void set_0_XamlControlsResources_UseCompactResources(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.XamlControlsResources)instance;
            that.UseCompactResources = (global::System.Boolean)Value;
        }
        private object get_1_ScrollView_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.Content;
        }
        private void set_1_ScrollView_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.Content = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_2_ScrollView_ContentOrientation(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ContentOrientation;
        }
        private void set_2_ScrollView_ContentOrientation(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.ContentOrientation = (global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation)Value;
        }
        private object get_3_ScrollView_ComputedHorizontalScrollBarVisibility(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ComputedHorizontalScrollBarVisibility;
        }
        private object get_4_ScrollView_ComputedHorizontalScrollMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ComputedHorizontalScrollMode;
        }
        private object get_5_ScrollView_ComputedVerticalScrollBarVisibility(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ComputedVerticalScrollBarVisibility;
        }
        private object get_6_ScrollView_ComputedVerticalScrollMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ComputedVerticalScrollMode;
        }
        private object get_7_ScrollView_CurrentAnchor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.CurrentAnchor;
        }
        private object get_8_ScrollView_ExpressionAnimationSources(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ExpressionAnimationSources;
        }
        private object get_9_ScrollView_ExtentHeight(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ExtentHeight;
        }
        private object get_10_ScrollView_ExtentWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ExtentWidth;
        }
        private object get_11_ScrollView_HorizontalAnchorRatio(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalAnchorRatio;
        }
        private void set_11_ScrollView_HorizontalAnchorRatio(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.HorizontalAnchorRatio = (global::System.Double)Value;
        }
        private object get_12_ScrollView_HorizontalOffset(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalOffset;
        }
        private object get_13_ScrollView_HorizontalScrollBarVisibility(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalScrollBarVisibility;
        }
        private void set_13_ScrollView_HorizontalScrollBarVisibility(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.HorizontalScrollBarVisibility = (global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility)Value;
        }
        private object get_14_ScrollView_HorizontalScrollChainMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalScrollChainMode;
        }
        private void set_14_ScrollView_HorizontalScrollChainMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.HorizontalScrollChainMode = (global::Microsoft.UI.Xaml.Controls.ScrollingChainMode)Value;
        }
        private object get_15_ScrollView_HorizontalScrollMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalScrollMode;
        }
        private void set_15_ScrollView_HorizontalScrollMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.HorizontalScrollMode = (global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode)Value;
        }
        private object get_16_ScrollView_HorizontalScrollRailMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalScrollRailMode;
        }
        private void set_16_ScrollView_HorizontalScrollRailMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.HorizontalScrollRailMode = (global::Microsoft.UI.Xaml.Controls.ScrollingRailMode)Value;
        }
        private object get_17_ScrollView_IgnoredInputKinds(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.IgnoredInputKinds;
        }
        private void set_17_ScrollView_IgnoredInputKinds(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.IgnoredInputKinds = (global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds)Value;
        }
        private object get_18_ScrollView_MaxZoomFactor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.MaxZoomFactor;
        }
        private void set_18_ScrollView_MaxZoomFactor(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.MaxZoomFactor = (global::System.Double)Value;
        }
        private object get_19_ScrollView_MinZoomFactor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.MinZoomFactor;
        }
        private void set_19_ScrollView_MinZoomFactor(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.MinZoomFactor = (global::System.Double)Value;
        }
        private object get_20_ScrollView_ScrollPresenter(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ScrollPresenter;
        }
        private object get_21_ScrollPresenter_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter)instance;
            return that.Content;
        }
        private void set_21_ScrollPresenter_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter)instance;
            that.Content = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_22_ScrollView_ScrollableHeight(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ScrollableHeight;
        }
        private object get_23_ScrollView_ScrollableWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ScrollableWidth;
        }
        private object get_24_ScrollView_State(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.State;
        }
        private object get_25_ScrollView_VerticalAnchorRatio(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalAnchorRatio;
        }
        private void set_25_ScrollView_VerticalAnchorRatio(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.VerticalAnchorRatio = (global::System.Double)Value;
        }
        private object get_26_ScrollView_VerticalOffset(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalOffset;
        }
        private object get_27_ScrollView_VerticalScrollBarVisibility(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalScrollBarVisibility;
        }
        private void set_27_ScrollView_VerticalScrollBarVisibility(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.VerticalScrollBarVisibility = (global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility)Value;
        }
        private object get_28_ScrollView_VerticalScrollChainMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalScrollChainMode;
        }
        private void set_28_ScrollView_VerticalScrollChainMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.VerticalScrollChainMode = (global::Microsoft.UI.Xaml.Controls.ScrollingChainMode)Value;
        }
        private object get_29_ScrollView_VerticalScrollMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalScrollMode;
        }
        private void set_29_ScrollView_VerticalScrollMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.VerticalScrollMode = (global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode)Value;
        }
        private object get_30_ScrollView_VerticalScrollRailMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalScrollRailMode;
        }
        private void set_30_ScrollView_VerticalScrollRailMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.VerticalScrollRailMode = (global::Microsoft.UI.Xaml.Controls.ScrollingRailMode)Value;
        }
        private object get_31_ScrollView_ViewportHeight(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ViewportHeight;
        }
        private object get_32_ScrollView_ViewportWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ViewportWidth;
        }
        private object get_33_ScrollView_ZoomChainMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ZoomChainMode;
        }
        private void set_33_ScrollView_ZoomChainMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.ZoomChainMode = (global::Microsoft.UI.Xaml.Controls.ScrollingChainMode)Value;
        }
        private object get_34_ScrollView_ZoomFactor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ZoomFactor;
        }
        private object get_35_ScrollView_ZoomMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ZoomMode;
        }
        private void set_35_ScrollView_ZoomMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.ZoomMode = (global::Microsoft.UI.Xaml.Controls.ScrollingZoomMode)Value;
        }
        private object get_36_BlogPage_ViewModel(object instance)
        {
            var that = (global::SellingTree.BlogPage)instance;
            return that.ViewModel;
        }
        private void set_36_BlogPage_ViewModel(object instance, object Value)
        {
            var that = (global::SellingTree.BlogPage)instance;
            that.ViewModel = (global::SellingTree.ViewModel.BlogViewModel)Value;
        }
        private object get_37_ChatPage_ViewModel(object instance)
        {
            var that = (global::SellingTree.View.ChatPage)instance;
            return that.ViewModel;
        }
        private void set_37_ChatPage_ViewModel(object instance, object Value)
        {
            var that = (global::SellingTree.View.ChatPage)instance;
            that.ViewModel = (global::SellingTree.ViewModel.MessageViewModel)Value;
        }
        private object get_38_ProgressRing_IsActive(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.IsActive;
        }
        private void set_38_ProgressRing_IsActive(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.IsActive = (global::System.Boolean)Value;
        }
        private object get_39_ProgressRing_IsIndeterminate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.IsIndeterminate;
        }
        private void set_39_ProgressRing_IsIndeterminate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.IsIndeterminate = (global::System.Boolean)Value;
        }
        private object get_40_ProgressRing_Maximum(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.Maximum;
        }
        private void set_40_ProgressRing_Maximum(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.Maximum = (global::System.Double)Value;
        }
        private object get_41_ProgressRing_Minimum(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.Minimum;
        }
        private void set_41_ProgressRing_Minimum(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.Minimum = (global::System.Double)Value;
        }
        private object get_42_ProgressRing_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.TemplateSettings;
        }
        private object get_43_ProgressRing_Value(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.Value;
        }
        private void set_43_ProgressRing_Value(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.Value = (global::System.Double)Value;
        }
        private object get_44_InfoBadge_Value(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBadge)instance;
            return that.Value;
        }
        private void set_44_InfoBadge_Value(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBadge)instance;
            that.Value = (global::System.Int32)Value;
        }
        private object get_45_InfoBadge_IconSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBadge)instance;
            return that.IconSource;
        }
        private void set_45_InfoBadge_IconSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBadge)instance;
            that.IconSource = (global::Microsoft.UI.Xaml.Controls.IconSource)Value;
        }
        private object get_46_InfoBadge_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBadge)instance;
            return that.TemplateSettings;
        }
        private object get_47_RatingControl_Value(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RatingControl)instance;
            return that.Value;
        }
        private void set_47_RatingControl_Value(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RatingControl)instance;
            that.Value = (global::System.Double)Value;
        }
        private object get_48_RatingControl_MaxRating(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RatingControl)instance;
            return that.MaxRating;
        }
        private void set_48_RatingControl_MaxRating(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RatingControl)instance;
            that.MaxRating = (global::System.Int32)Value;
        }
        private object get_49_RatingControl_IsReadOnly(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RatingControl)instance;
            return that.IsReadOnly;
        }
        private void set_49_RatingControl_IsReadOnly(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RatingControl)instance;
            that.IsReadOnly = (global::System.Boolean)Value;
        }
        private object get_50_RatingControl_Caption(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RatingControl)instance;
            return that.Caption;
        }
        private void set_50_RatingControl_Caption(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RatingControl)instance;
            that.Caption = (global::System.String)Value;
        }
        private object get_51_RatingControl_InitialSetValue(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RatingControl)instance;
            return that.InitialSetValue;
        }
        private void set_51_RatingControl_InitialSetValue(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RatingControl)instance;
            that.InitialSetValue = (global::System.Int32)Value;
        }
        private object get_52_RatingControl_IsClearEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RatingControl)instance;
            return that.IsClearEnabled;
        }
        private void set_52_RatingControl_IsClearEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RatingControl)instance;
            that.IsClearEnabled = (global::System.Boolean)Value;
        }
        private object get_53_RatingControl_ItemInfo(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RatingControl)instance;
            return that.ItemInfo;
        }
        private void set_53_RatingControl_ItemInfo(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RatingControl)instance;
            that.ItemInfo = (global::Microsoft.UI.Xaml.Controls.RatingItemInfo)Value;
        }
        private object get_54_RatingControl_PlaceholderValue(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RatingControl)instance;
            return that.PlaceholderValue;
        }
        private void set_54_RatingControl_PlaceholderValue(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RatingControl)instance;
            that.PlaceholderValue = (global::System.Double)Value;
        }
        private object get_55_PersonPicture_ProfilePicture(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            return that.ProfilePicture;
        }
        private void set_55_PersonPicture_ProfilePicture(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            that.ProfilePicture = (global::Microsoft.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_56_PersonPicture_BadgeGlyph(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            return that.BadgeGlyph;
        }
        private void set_56_PersonPicture_BadgeGlyph(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            that.BadgeGlyph = (global::System.String)Value;
        }
        private object get_57_PersonPicture_BadgeImageSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            return that.BadgeImageSource;
        }
        private void set_57_PersonPicture_BadgeImageSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            that.BadgeImageSource = (global::Microsoft.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_58_PersonPicture_BadgeNumber(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            return that.BadgeNumber;
        }
        private void set_58_PersonPicture_BadgeNumber(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            that.BadgeNumber = (global::System.Int32)Value;
        }
        private object get_59_PersonPicture_BadgeText(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            return that.BadgeText;
        }
        private void set_59_PersonPicture_BadgeText(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            that.BadgeText = (global::System.String)Value;
        }
        private object get_60_PersonPicture_Contact(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            return that.Contact;
        }
        private void set_60_PersonPicture_Contact(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            that.Contact = (global::Windows.ApplicationModel.Contacts.Contact)Value;
        }
        private object get_61_PersonPicture_DisplayName(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            return that.DisplayName;
        }
        private void set_61_PersonPicture_DisplayName(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            that.DisplayName = (global::System.String)Value;
        }
        private object get_62_PersonPicture_Initials(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            return that.Initials;
        }
        private void set_62_PersonPicture_Initials(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            that.Initials = (global::System.String)Value;
        }
        private object get_63_PersonPicture_IsGroup(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            return that.IsGroup;
        }
        private void set_63_PersonPicture_IsGroup(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            that.IsGroup = (global::System.Boolean)Value;
        }
        private object get_64_PersonPicture_PreferSmallImage(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            return that.PreferSmallImage;
        }
        private void set_64_PersonPicture_PreferSmallImage(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            that.PreferSmallImage = (global::System.Boolean)Value;
        }
        private object get_65_PersonPicture_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.PersonPicture)instance;
            return that.TemplateSettings;
        }
        private object get_66_NumberBox_SpinButtonPlacementMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            return that.SpinButtonPlacementMode;
        }
        private void set_66_NumberBox_SpinButtonPlacementMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            that.SpinButtonPlacementMode = (global::Microsoft.UI.Xaml.Controls.NumberBoxSpinButtonPlacementMode)Value;
        }
        private object get_67_NumberBox_Value(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            return that.Value;
        }
        private void set_67_NumberBox_Value(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            that.Value = (global::System.Double)Value;
        }
        private object get_68_NumberBox_Minimum(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            return that.Minimum;
        }
        private void set_68_NumberBox_Minimum(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            that.Minimum = (global::System.Double)Value;
        }
        private object get_69_NumberBox_Maximum(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            return that.Maximum;
        }
        private void set_69_NumberBox_Maximum(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            that.Maximum = (global::System.Double)Value;
        }
        private object get_70_NumberBox_AcceptsExpression(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            return that.AcceptsExpression;
        }
        private void set_70_NumberBox_AcceptsExpression(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            that.AcceptsExpression = (global::System.Boolean)Value;
        }
        private object get_71_NumberBox_Description(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            return that.Description;
        }
        private void set_71_NumberBox_Description(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            that.Description = (global::System.Object)Value;
        }
        private object get_72_NumberBox_Header(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            return that.Header;
        }
        private void set_72_NumberBox_Header(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_73_NumberBox_HeaderTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            return that.HeaderTemplate;
        }
        private void set_73_NumberBox_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            that.HeaderTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_74_NumberBox_IsWrapEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            return that.IsWrapEnabled;
        }
        private void set_74_NumberBox_IsWrapEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            that.IsWrapEnabled = (global::System.Boolean)Value;
        }
        private object get_75_NumberBox_LargeChange(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            return that.LargeChange;
        }
        private void set_75_NumberBox_LargeChange(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            that.LargeChange = (global::System.Double)Value;
        }
        private object get_76_NumberBox_NumberFormatter(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            return that.NumberFormatter;
        }
        private void set_76_NumberBox_NumberFormatter(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            that.NumberFormatter = (global::Windows.Globalization.NumberFormatting.INumberFormatter2)Value;
        }
        private object get_77_NumberBox_PlaceholderText(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            return that.PlaceholderText;
        }
        private void set_77_NumberBox_PlaceholderText(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            that.PlaceholderText = (global::System.String)Value;
        }
        private object get_78_NumberBox_PreventKeyboardDisplayOnProgrammaticFocus(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            return that.PreventKeyboardDisplayOnProgrammaticFocus;
        }
        private void set_78_NumberBox_PreventKeyboardDisplayOnProgrammaticFocus(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            that.PreventKeyboardDisplayOnProgrammaticFocus = (global::System.Boolean)Value;
        }
        private object get_79_NumberBox_SelectionFlyout(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            return that.SelectionFlyout;
        }
        private void set_79_NumberBox_SelectionFlyout(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            that.SelectionFlyout = (global::Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase)Value;
        }
        private object get_80_NumberBox_SelectionHighlightColor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            return that.SelectionHighlightColor;
        }
        private void set_80_NumberBox_SelectionHighlightColor(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            that.SelectionHighlightColor = (global::Microsoft.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_81_NumberBox_SmallChange(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            return that.SmallChange;
        }
        private void set_81_NumberBox_SmallChange(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            that.SmallChange = (global::System.Double)Value;
        }
        private object get_82_NumberBox_Text(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            return that.Text;
        }
        private void set_82_NumberBox_Text(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            that.Text = (global::System.String)Value;
        }
        private object get_83_NumberBox_TextReadingOrder(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            return that.TextReadingOrder;
        }
        private void set_83_NumberBox_TextReadingOrder(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            that.TextReadingOrder = (global::Microsoft.UI.Xaml.TextReadingOrder)Value;
        }
        private object get_84_NumberBox_ValidationMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            return that.ValidationMode;
        }
        private void set_84_NumberBox_ValidationMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NumberBox)instance;
            that.ValidationMode = (global::Microsoft.UI.Xaml.Controls.NumberBoxValidationMode)Value;
        }
        private object get_85_TreeViewNode_Children(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Children;
        }
        private object get_86_TreeViewNode_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Content;
        }
        private void set_86_TreeViewNode_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.Content = (global::System.Object)Value;
        }
        private object get_87_TreeViewNode_Depth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Depth;
        }
        private object get_88_TreeViewNode_HasChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.HasChildren;
        }
        private object get_89_TreeViewNode_HasUnrealizedChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.HasUnrealizedChildren;
        }
        private void set_89_TreeViewNode_HasUnrealizedChildren(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.HasUnrealizedChildren = (global::System.Boolean)Value;
        }
        private object get_90_TreeViewNode_IsExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.IsExpanded;
        }
        private void set_90_TreeViewNode_IsExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_91_TreeViewNode_Parent(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Parent;
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::SellingTree.SellingTree_XamlTypeInfo.XamlMember xamlMember = null;
            global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Microsoft.UI.Xaml.Controls.XamlControlsResources.UseCompactResources":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.XamlControlsResources");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "UseCompactResources", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_0_XamlControlsResources_UseCompactResources;
                xamlMember.Setter = set_0_XamlControlsResources_UseCompactResources;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.Content":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "Content", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_1_ScrollView_Content;
                xamlMember.Setter = set_1_ScrollView_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ContentOrientation":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "ContentOrientation", "Microsoft.UI.Xaml.Controls.ScrollingContentOrientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_2_ScrollView_ContentOrientation;
                xamlMember.Setter = set_2_ScrollView_ContentOrientation;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ComputedHorizontalScrollBarVisibility":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "ComputedHorizontalScrollBarVisibility", "Microsoft.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_3_ScrollView_ComputedHorizontalScrollBarVisibility;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ComputedHorizontalScrollMode":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "ComputedHorizontalScrollMode", "Microsoft.UI.Xaml.Controls.ScrollingScrollMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_ScrollView_ComputedHorizontalScrollMode;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ComputedVerticalScrollBarVisibility":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "ComputedVerticalScrollBarVisibility", "Microsoft.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_ScrollView_ComputedVerticalScrollBarVisibility;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ComputedVerticalScrollMode":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "ComputedVerticalScrollMode", "Microsoft.UI.Xaml.Controls.ScrollingScrollMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_ScrollView_ComputedVerticalScrollMode;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.CurrentAnchor":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "CurrentAnchor", "Microsoft.UI.Xaml.UIElement");
                xamlMember.Getter = get_7_ScrollView_CurrentAnchor;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ExpressionAnimationSources":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "ExpressionAnimationSources", "Microsoft.UI.Composition.CompositionPropertySet");
                xamlMember.Getter = get_8_ScrollView_ExpressionAnimationSources;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ExtentHeight":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "ExtentHeight", "Double");
                xamlMember.Getter = get_9_ScrollView_ExtentHeight;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ExtentWidth":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "ExtentWidth", "Double");
                xamlMember.Getter = get_10_ScrollView_ExtentWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalAnchorRatio":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "HorizontalAnchorRatio", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_ScrollView_HorizontalAnchorRatio;
                xamlMember.Setter = set_11_ScrollView_HorizontalAnchorRatio;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalOffset":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "HorizontalOffset", "Double");
                xamlMember.Getter = get_12_ScrollView_HorizontalOffset;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalScrollBarVisibility":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "HorizontalScrollBarVisibility", "Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_ScrollView_HorizontalScrollBarVisibility;
                xamlMember.Setter = set_13_ScrollView_HorizontalScrollBarVisibility;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalScrollChainMode":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "HorizontalScrollChainMode", "Microsoft.UI.Xaml.Controls.ScrollingChainMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_ScrollView_HorizontalScrollChainMode;
                xamlMember.Setter = set_14_ScrollView_HorizontalScrollChainMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalScrollMode":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "HorizontalScrollMode", "Microsoft.UI.Xaml.Controls.ScrollingScrollMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_ScrollView_HorizontalScrollMode;
                xamlMember.Setter = set_15_ScrollView_HorizontalScrollMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalScrollRailMode":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "HorizontalScrollRailMode", "Microsoft.UI.Xaml.Controls.ScrollingRailMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_ScrollView_HorizontalScrollRailMode;
                xamlMember.Setter = set_16_ScrollView_HorizontalScrollRailMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.IgnoredInputKinds":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "IgnoredInputKinds", "Microsoft.UI.Xaml.Controls.ScrollingInputKinds");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_ScrollView_IgnoredInputKinds;
                xamlMember.Setter = set_17_ScrollView_IgnoredInputKinds;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.MaxZoomFactor":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "MaxZoomFactor", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_ScrollView_MaxZoomFactor;
                xamlMember.Setter = set_18_ScrollView_MaxZoomFactor;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.MinZoomFactor":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "MinZoomFactor", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_ScrollView_MinZoomFactor;
                xamlMember.Setter = set_19_ScrollView_MinZoomFactor;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ScrollPresenter":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "ScrollPresenter", "Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_ScrollView_ScrollPresenter;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter.Content":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "Content", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_ScrollPresenter_Content;
                xamlMember.Setter = set_21_ScrollPresenter_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ScrollableHeight":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "ScrollableHeight", "Double");
                xamlMember.Getter = get_22_ScrollView_ScrollableHeight;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ScrollableWidth":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "ScrollableWidth", "Double");
                xamlMember.Getter = get_23_ScrollView_ScrollableWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.State":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "State", "Microsoft.UI.Xaml.Controls.ScrollingInteractionState");
                xamlMember.Getter = get_24_ScrollView_State;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalAnchorRatio":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "VerticalAnchorRatio", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_ScrollView_VerticalAnchorRatio;
                xamlMember.Setter = set_25_ScrollView_VerticalAnchorRatio;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalOffset":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "VerticalOffset", "Double");
                xamlMember.Getter = get_26_ScrollView_VerticalOffset;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalScrollBarVisibility":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "VerticalScrollBarVisibility", "Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_27_ScrollView_VerticalScrollBarVisibility;
                xamlMember.Setter = set_27_ScrollView_VerticalScrollBarVisibility;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalScrollChainMode":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "VerticalScrollChainMode", "Microsoft.UI.Xaml.Controls.ScrollingChainMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_28_ScrollView_VerticalScrollChainMode;
                xamlMember.Setter = set_28_ScrollView_VerticalScrollChainMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalScrollMode":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "VerticalScrollMode", "Microsoft.UI.Xaml.Controls.ScrollingScrollMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_29_ScrollView_VerticalScrollMode;
                xamlMember.Setter = set_29_ScrollView_VerticalScrollMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalScrollRailMode":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "VerticalScrollRailMode", "Microsoft.UI.Xaml.Controls.ScrollingRailMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_ScrollView_VerticalScrollRailMode;
                xamlMember.Setter = set_30_ScrollView_VerticalScrollRailMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ViewportHeight":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "ViewportHeight", "Double");
                xamlMember.Getter = get_31_ScrollView_ViewportHeight;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ViewportWidth":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "ViewportWidth", "Double");
                xamlMember.Getter = get_32_ScrollView_ViewportWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ZoomChainMode":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "ZoomChainMode", "Microsoft.UI.Xaml.Controls.ScrollingChainMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_ScrollView_ZoomChainMode;
                xamlMember.Setter = set_33_ScrollView_ZoomChainMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ZoomFactor":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "ZoomFactor", "Single");
                xamlMember.Getter = get_34_ScrollView_ZoomFactor;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ZoomMode":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "ZoomMode", "Microsoft.UI.Xaml.Controls.ScrollingZoomMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_ScrollView_ZoomMode;
                xamlMember.Setter = set_35_ScrollView_ZoomMode;
                break;
            case "SellingTree.BlogPage.ViewModel":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SellingTree.BlogPage");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "ViewModel", "SellingTree.ViewModel.BlogViewModel");
                xamlMember.Getter = get_36_BlogPage_ViewModel;
                xamlMember.Setter = set_36_BlogPage_ViewModel;
                break;
            case "SellingTree.View.ChatPage.ViewModel":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SellingTree.View.ChatPage");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "ViewModel", "SellingTree.ViewModel.MessageViewModel");
                xamlMember.Getter = get_37_ChatPage_ViewModel;
                xamlMember.Setter = set_37_ChatPage_ViewModel;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.IsActive":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "IsActive", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_38_ProgressRing_IsActive;
                xamlMember.Setter = set_38_ProgressRing_IsActive;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.IsIndeterminate":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "IsIndeterminate", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_39_ProgressRing_IsIndeterminate;
                xamlMember.Setter = set_39_ProgressRing_IsIndeterminate;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.Maximum":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "Maximum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_40_ProgressRing_Maximum;
                xamlMember.Setter = set_40_ProgressRing_Maximum;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.Minimum":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "Minimum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_41_ProgressRing_Minimum;
                xamlMember.Setter = set_41_ProgressRing_Minimum;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.TemplateSettings":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings");
                xamlMember.Getter = get_42_ProgressRing_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.Value":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "Value", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_43_ProgressRing_Value;
                xamlMember.Setter = set_43_ProgressRing_Value;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBadge.Value":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBadge");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "Value", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_44_InfoBadge_Value;
                xamlMember.Setter = set_44_InfoBadge_Value;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBadge.IconSource":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBadge");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "IconSource", "Microsoft.UI.Xaml.Controls.IconSource");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_45_InfoBadge_IconSource;
                xamlMember.Setter = set_45_InfoBadge_IconSource;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBadge.TemplateSettings":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBadge");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_46_InfoBadge_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.RatingControl.Value":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.RatingControl");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "Value", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_47_RatingControl_Value;
                xamlMember.Setter = set_47_RatingControl_Value;
                break;
            case "Microsoft.UI.Xaml.Controls.RatingControl.MaxRating":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.RatingControl");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "MaxRating", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_48_RatingControl_MaxRating;
                xamlMember.Setter = set_48_RatingControl_MaxRating;
                break;
            case "Microsoft.UI.Xaml.Controls.RatingControl.IsReadOnly":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.RatingControl");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "IsReadOnly", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_49_RatingControl_IsReadOnly;
                xamlMember.Setter = set_49_RatingControl_IsReadOnly;
                break;
            case "Microsoft.UI.Xaml.Controls.RatingControl.Caption":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.RatingControl");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "Caption", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_50_RatingControl_Caption;
                xamlMember.Setter = set_50_RatingControl_Caption;
                break;
            case "Microsoft.UI.Xaml.Controls.RatingControl.InitialSetValue":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.RatingControl");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "InitialSetValue", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_51_RatingControl_InitialSetValue;
                xamlMember.Setter = set_51_RatingControl_InitialSetValue;
                break;
            case "Microsoft.UI.Xaml.Controls.RatingControl.IsClearEnabled":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.RatingControl");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "IsClearEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_52_RatingControl_IsClearEnabled;
                xamlMember.Setter = set_52_RatingControl_IsClearEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.RatingControl.ItemInfo":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.RatingControl");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "ItemInfo", "Microsoft.UI.Xaml.Controls.RatingItemInfo");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_53_RatingControl_ItemInfo;
                xamlMember.Setter = set_53_RatingControl_ItemInfo;
                break;
            case "Microsoft.UI.Xaml.Controls.RatingControl.PlaceholderValue":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.RatingControl");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "PlaceholderValue", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_54_RatingControl_PlaceholderValue;
                xamlMember.Setter = set_54_RatingControl_PlaceholderValue;
                break;
            case "Microsoft.UI.Xaml.Controls.PersonPicture.ProfilePicture":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.PersonPicture");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "ProfilePicture", "Microsoft.UI.Xaml.Media.ImageSource");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_55_PersonPicture_ProfilePicture;
                xamlMember.Setter = set_55_PersonPicture_ProfilePicture;
                break;
            case "Microsoft.UI.Xaml.Controls.PersonPicture.BadgeGlyph":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.PersonPicture");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "BadgeGlyph", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_56_PersonPicture_BadgeGlyph;
                xamlMember.Setter = set_56_PersonPicture_BadgeGlyph;
                break;
            case "Microsoft.UI.Xaml.Controls.PersonPicture.BadgeImageSource":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.PersonPicture");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "BadgeImageSource", "Microsoft.UI.Xaml.Media.ImageSource");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_57_PersonPicture_BadgeImageSource;
                xamlMember.Setter = set_57_PersonPicture_BadgeImageSource;
                break;
            case "Microsoft.UI.Xaml.Controls.PersonPicture.BadgeNumber":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.PersonPicture");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "BadgeNumber", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_58_PersonPicture_BadgeNumber;
                xamlMember.Setter = set_58_PersonPicture_BadgeNumber;
                break;
            case "Microsoft.UI.Xaml.Controls.PersonPicture.BadgeText":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.PersonPicture");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "BadgeText", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_59_PersonPicture_BadgeText;
                xamlMember.Setter = set_59_PersonPicture_BadgeText;
                break;
            case "Microsoft.UI.Xaml.Controls.PersonPicture.Contact":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.PersonPicture");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "Contact", "Windows.ApplicationModel.Contacts.Contact");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_60_PersonPicture_Contact;
                xamlMember.Setter = set_60_PersonPicture_Contact;
                break;
            case "Microsoft.UI.Xaml.Controls.PersonPicture.DisplayName":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.PersonPicture");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "DisplayName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_61_PersonPicture_DisplayName;
                xamlMember.Setter = set_61_PersonPicture_DisplayName;
                break;
            case "Microsoft.UI.Xaml.Controls.PersonPicture.Initials":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.PersonPicture");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "Initials", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_62_PersonPicture_Initials;
                xamlMember.Setter = set_62_PersonPicture_Initials;
                break;
            case "Microsoft.UI.Xaml.Controls.PersonPicture.IsGroup":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.PersonPicture");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "IsGroup", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_63_PersonPicture_IsGroup;
                xamlMember.Setter = set_63_PersonPicture_IsGroup;
                break;
            case "Microsoft.UI.Xaml.Controls.PersonPicture.PreferSmallImage":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.PersonPicture");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "PreferSmallImage", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_64_PersonPicture_PreferSmallImage;
                xamlMember.Setter = set_64_PersonPicture_PreferSmallImage;
                break;
            case "Microsoft.UI.Xaml.Controls.PersonPicture.TemplateSettings":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.PersonPicture");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.PersonPictureTemplateSettings");
                xamlMember.Getter = get_65_PersonPicture_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NumberBox.SpinButtonPlacementMode":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NumberBox");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "SpinButtonPlacementMode", "Microsoft.UI.Xaml.Controls.NumberBoxSpinButtonPlacementMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_66_NumberBox_SpinButtonPlacementMode;
                xamlMember.Setter = set_66_NumberBox_SpinButtonPlacementMode;
                break;
            case "Microsoft.UI.Xaml.Controls.NumberBox.Value":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NumberBox");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "Value", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_67_NumberBox_Value;
                xamlMember.Setter = set_67_NumberBox_Value;
                break;
            case "Microsoft.UI.Xaml.Controls.NumberBox.Minimum":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NumberBox");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "Minimum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_68_NumberBox_Minimum;
                xamlMember.Setter = set_68_NumberBox_Minimum;
                break;
            case "Microsoft.UI.Xaml.Controls.NumberBox.Maximum":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NumberBox");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "Maximum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_69_NumberBox_Maximum;
                xamlMember.Setter = set_69_NumberBox_Maximum;
                break;
            case "Microsoft.UI.Xaml.Controls.NumberBox.AcceptsExpression":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NumberBox");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "AcceptsExpression", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_70_NumberBox_AcceptsExpression;
                xamlMember.Setter = set_70_NumberBox_AcceptsExpression;
                break;
            case "Microsoft.UI.Xaml.Controls.NumberBox.Description":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NumberBox");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "Description", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_71_NumberBox_Description;
                xamlMember.Setter = set_71_NumberBox_Description;
                break;
            case "Microsoft.UI.Xaml.Controls.NumberBox.Header":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NumberBox");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_72_NumberBox_Header;
                xamlMember.Setter = set_72_NumberBox_Header;
                break;
            case "Microsoft.UI.Xaml.Controls.NumberBox.HeaderTemplate":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NumberBox");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_73_NumberBox_HeaderTemplate;
                xamlMember.Setter = set_73_NumberBox_HeaderTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.NumberBox.IsWrapEnabled":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NumberBox");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "IsWrapEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_74_NumberBox_IsWrapEnabled;
                xamlMember.Setter = set_74_NumberBox_IsWrapEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.NumberBox.LargeChange":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NumberBox");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "LargeChange", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_75_NumberBox_LargeChange;
                xamlMember.Setter = set_75_NumberBox_LargeChange;
                break;
            case "Microsoft.UI.Xaml.Controls.NumberBox.NumberFormatter":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NumberBox");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "NumberFormatter", "Windows.Globalization.NumberFormatting.INumberFormatter2");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_76_NumberBox_NumberFormatter;
                xamlMember.Setter = set_76_NumberBox_NumberFormatter;
                break;
            case "Microsoft.UI.Xaml.Controls.NumberBox.PlaceholderText":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NumberBox");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "PlaceholderText", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_77_NumberBox_PlaceholderText;
                xamlMember.Setter = set_77_NumberBox_PlaceholderText;
                break;
            case "Microsoft.UI.Xaml.Controls.NumberBox.PreventKeyboardDisplayOnProgrammaticFocus":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NumberBox");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "PreventKeyboardDisplayOnProgrammaticFocus", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_78_NumberBox_PreventKeyboardDisplayOnProgrammaticFocus;
                xamlMember.Setter = set_78_NumberBox_PreventKeyboardDisplayOnProgrammaticFocus;
                break;
            case "Microsoft.UI.Xaml.Controls.NumberBox.SelectionFlyout":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NumberBox");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "SelectionFlyout", "Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_79_NumberBox_SelectionFlyout;
                xamlMember.Setter = set_79_NumberBox_SelectionFlyout;
                break;
            case "Microsoft.UI.Xaml.Controls.NumberBox.SelectionHighlightColor":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NumberBox");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "SelectionHighlightColor", "Microsoft.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_80_NumberBox_SelectionHighlightColor;
                xamlMember.Setter = set_80_NumberBox_SelectionHighlightColor;
                break;
            case "Microsoft.UI.Xaml.Controls.NumberBox.SmallChange":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NumberBox");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "SmallChange", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_81_NumberBox_SmallChange;
                xamlMember.Setter = set_81_NumberBox_SmallChange;
                break;
            case "Microsoft.UI.Xaml.Controls.NumberBox.Text":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NumberBox");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "Text", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_82_NumberBox_Text;
                xamlMember.Setter = set_82_NumberBox_Text;
                break;
            case "Microsoft.UI.Xaml.Controls.NumberBox.TextReadingOrder":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NumberBox");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "TextReadingOrder", "Microsoft.UI.Xaml.TextReadingOrder");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_83_NumberBox_TextReadingOrder;
                xamlMember.Setter = set_83_NumberBox_TextReadingOrder;
                break;
            case "Microsoft.UI.Xaml.Controls.NumberBox.ValidationMode":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NumberBox");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "ValidationMode", "Microsoft.UI.Xaml.Controls.NumberBoxValidationMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_84_NumberBox_ValidationMode;
                xamlMember.Setter = set_84_NumberBox_ValidationMode;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Children":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "Children", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>");
                xamlMember.Getter = get_85_TreeViewNode_Children;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Content":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "Content", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_86_TreeViewNode_Content;
                xamlMember.Setter = set_86_TreeViewNode_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Depth":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "Depth", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_87_TreeViewNode_Depth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.HasChildren":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "HasChildren", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_88_TreeViewNode_HasChildren;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.HasUnrealizedChildren":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "HasUnrealizedChildren", "Boolean");
                xamlMember.Getter = get_89_TreeViewNode_HasUnrealizedChildren;
                xamlMember.Setter = set_89_TreeViewNode_HasUnrealizedChildren;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.IsExpanded":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_90_TreeViewNode_IsExpanded;
                xamlMember.Setter = set_90_TreeViewNode_IsExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Parent":
                userType = (global::SellingTree.SellingTree_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::SellingTree.SellingTree_XamlTypeInfo.XamlMember(this, "Parent", "Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember.Getter = get_91_TreeViewNode_Parent;
                xamlMember.SetIsReadOnly();
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2409")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlSystemBaseType : global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, 
            global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void StaticInitializer();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);
    internal delegate object BoxInstanceMethod(object instance);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2409")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlUserType : global::SellingTree.SellingTree_XamlTypeInfo.XamlSystemBaseType
        , global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        global::SellingTree.SellingTree_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Microsoft.UI.Xaml.Markup.IXamlType _baseType;
        global::Microsoft.UI.Xaml.Markup.IXamlType _boxedType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::SellingTree.SellingTree_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, 
            global::System.Type fullType, global::Microsoft.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }
        override public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { return _boxedType; } }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            StaticInitializer();
        }

        override public object CreateFromString(string input)
        {
            if (BoxedType != null)
            {
                return BoxInstance(BoxedType.CreateFromString(input));
            }

            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                long value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    long enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt64(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt64(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt64(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return global::System.Convert.ChangeType(value, global::System.Enum.GetUnderlyingType(this.UnderlyingType));
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public StaticInitializer StaticInitializer { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }
        public BoxInstanceMethod BoxInstance {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void SetBoxedType(global::Microsoft.UI.Xaml.Markup.IXamlType boxedType)
        {
            _boxedType = boxedType;
        }

        public object BoxType<T>(object instance) where T: struct
        {
            T unwrapped = (T)instance;
            return new global::System.Nullable<T>(unwrapped);
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2409")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlMember : global::Microsoft.UI.Xaml.Markup.IXamlMember
    {
        global::SellingTree.SellingTree_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::SellingTree.SellingTree_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Microsoft.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Microsoft.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

